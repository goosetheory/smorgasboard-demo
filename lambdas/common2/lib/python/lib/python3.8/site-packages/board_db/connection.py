import os
import json
import pymysql
import logging
import boto3
import base64
from botocore.exceptions import ClientError

logger = logging.getLogger()
logger.setLevel(logging.INFO)


def get_db_creds():
	logger.info('Attempting to get secret')

	secret_name = os.environ.get('ENV') + '/DbCreds'
	region_name = os.environ.get('AWS_REGION')

	# Create a Secrets Manager client
	session = boto3.session.Session()
	client = session.client(
							service_name='secretsmanager',
							region_name=region_name
							)
	try:
		get_secret_value_response = client.get_secret_value(SecretId=secret_name)
	except ClientError as e:
		logging.exception('Error getting DB creds')
		raise e
	else:
		secret = get_secret_value_response['SecretString']
		return json.loads(secret)


db_creds = get_db_creds()


class Connection:
	def __init__(self):
		self.rds_host = db_creds['host']
		self.name = db_creds['username']
		self.password = db_creds['password']
		self.db_name = db_creds['dbname']
		self.connect_timeout = 5

		self.conn = pymysql.connect(host=self.rds_host, user=self.name, passwd=self.password, db=self.db_name, connect_timeout=self.connect_timeout)


	def get_cursor(self):
		return self.conn.cursor()
